name: Deploy services
on:
  push:
    branches:
      - main
    paths:
      - 'services/**'
  workflow_dispatch:

jobs:
  deploy-functions:
    name: Deploy functions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ['core', 'facebook', 'email']
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Check if functions exist
        id: check_functions
        working-directory: services/${{ matrix.service }}
        run: |
          if [ -d "supabase/functions" ] && [ "$(ls -A supabase/functions)" ]; then
            echo "has_functions=true" >> $GITHUB_OUTPUT
          else
            echo "has_functions=false" >> $GITHUB_OUTPUT
          fi
      - name: Deploy Supabase functions
        if: steps.check_functions.outputs.has_functions == 'true'
        working-directory: services/${{ matrix.service }}
        run: supabase functions deploy --project-ref $SUPABASE_PROJECT_ID
        env:
          SUPABASE_PROJECT_ID: ${{secrets.SUPABASE_PROJECT_ID}}
          SUPABASE_ACCESS_TOKEN: ${{secrets.SUPABASE_ACCESS_TOKEN}}

  run-migrations:
    name: Run migrations
    runs-on: ubuntu-latest
    needs: [deploy-functions]
    strategy:
      matrix:
        service: ['core', 'facebook']
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Check if migrations exist
        id: check_migrations
        working-directory: services/${{ matrix.service }}
        run: |
          if [ -d "supabase/migrations" ] && [ "$(ls -A supabase/migrations)" ]; then
            echo "has_migrations=true" >> $GITHUB_OUTPUT
          else
            echo "has_migrations=false" >> $GITHUB_OUTPUT
          fi
      - name: Push database changes
        if: steps.check_migrations.outputs.has_migrations == 'true'
        working-directory: services/${{ matrix.service }}
        run: |
          supabase link --project-ref $SUPABASE_PROJECT_ID
          supabase db push
        env:
          SUPABASE_DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          SUPABASE_PROJECT_ID: ${{secrets.SUPABASE_PROJECT_ID}}
          SUPABASE_ACCESS_TOKEN: ${{secrets.SUPABASE_ACCESS_TOKEN}}
