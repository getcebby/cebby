---
import type { EventFromDB } from '../types/database';
import { getFormattedTime } from '../utils/date';

interface Props {
    events: EventFromDB[];
    title?: string;
    showMonthYear?: boolean;
    isRecentEvents?: boolean; // New prop to determine if this is the recent events view
}

const { events, title = 'Agenda', showMonthYear = true, isRecentEvents = false } = Astro.props;

// Group events by month and date for better organization
const eventsByMonthAndDate = events.reduce(
    (acc, event) => {
        const eventDate = new Date(event.start_time);
        const monthKey = eventDate.toLocaleString('en-US', { month: 'long', year: 'numeric' });
        const dateKey = eventDate.toISOString().split('T')[0]; // YYYY-MM-DD format

        if (!acc[monthKey]) {
            acc[monthKey] = {};
        }

        if (!acc[monthKey][dateKey]) {
            acc[monthKey][dateKey] = [];
        }

        acc[monthKey][dateKey].push(event);
        return acc;
    },
    {} as Record<string, Record<string, EventFromDB[]>>
);

// Sort months chronologically or reverse chronologically based on isRecentEvents
const sortedMonths = Object.keys(eventsByMonthAndDate).sort((a, b) => {
    const dateA = new Date(a);
    const dateB = new Date(b);
    // For recent events, sort newest first; for upcoming events, sort oldest first
    return isRecentEvents ? dateB.getTime() - dateA.getTime() : dateA.getTime() - dateB.getTime();
});

// Function to format date for display
function formatDateHeader(dateStr: string) {
    const date = new Date(dateStr);
    const day = date.getDate();
    const weekday = date.toLocaleDateString('en-US', { weekday: 'short' }).toUpperCase();
    const month = date.toLocaleDateString('en-US', { month: 'short' }).toUpperCase();
    const monthName = date.toLocaleDateString('en-US', { month: 'short' });

    return { day, weekday, month, monthName };
}

// Function to get color based on event type or random
function getEventColor(event: EventFromDB) {
    // Default colors based on event type
    const typeColors = {
        default: 'bg-purple-500',
        workshop: 'bg-blue-500',
        conference: 'bg-emerald-500',
        meetup: 'bg-amber-500',
    };

    // Use event type color if available, otherwise use a default color
    return event.type && typeColors[event.type] ? typeColors[event.type] : 'bg-gray-500';
}

// Function to format time range
function formatTimeRange(event: EventFromDB) {
    const startTime = getFormattedTime(event.start_time);

    if (!event.end_time) {
        return startTime;
    }

    const endTime = getFormattedTime(event.end_time);
    return `${startTime} - ${endTime}`;
}

// Function to get a placeholder gradient background based on event type
function getEventGradient(event: EventFromDB) {
    // Default gradients based on event type
    const typeGradients = {
        default: 'bg-gradient-to-br from-purple-500 to-purple-700',
        workshop: 'bg-gradient-to-br from-blue-500 to-blue-700',
        conference: 'bg-gradient-to-br from-emerald-500 to-emerald-700',
        meetup: 'bg-gradient-to-br from-amber-500 to-amber-700',
    };

    // Use event type gradient if available, otherwise use a default gradient
    return event.type && typeGradients[event.type]
        ? typeGradients[event.type]
        : 'bg-gradient-to-br from-gray-500 to-gray-700';
}

// Function to determine if an event is happening now
function isEventHappeningNow(event: EventFromDB) {
    const now = new Date();
    const startTime = new Date(event.start_time);
    const endTime = event.end_time ? new Date(event.end_time) : new Date(startTime.getTime() + 2 * 60 * 60 * 1000); // Default 2 hours if no end time

    return now >= startTime && now <= endTime;
}

// Function to get event status
function getEventStatus(event: EventFromDB) {
    const now = new Date();
    const startTime = new Date(event.start_time);
    const endTime = event.end_time ? new Date(event.end_time) : new Date(startTime.getTime() + 2 * 60 * 60 * 1000);

    if (now > endTime) {
        return { status: 'past', label: 'Past' };
    } else if (now >= startTime && now <= endTime) {
        return { status: 'live', label: 'Live Now' };
    } else if (startTime.getTime() - now.getTime() < 24 * 60 * 60 * 1000) {
        return { status: 'soon', label: 'Soon' };
    } else {
        return { status: 'upcoming', label: 'Upcoming' };
    }
}
---

<div class="agenda-view">
    {title && <h2 class="text-2xl font-bold text-gray-900 mb-6">{title}</h2>}

    {/* Featured Events Section */}
    {
        events.some((event) => event.is_featured) && (
            <div class="mb-12">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    {events
                        .filter((event) => event.is_featured)
                        .map((event) => (
                            <a
                                href={`/events/${event.slug || event.id}`}
                                class="group block bg-white rounded-2xl overflow-hidden shadow-sm hover:shadow-md transition-all duration-200"
                            >
                                {/* Event Image/Cover */}
                                <div class="relative aspect-[1.91/1] w-full overflow-hidden bg-gradient-to-br from-gray-900 to-gray-800">
                                    {event.cover_photo ? (
                                        <img
                                            src={event.cover_photo}
                                            alt={event.name}
                                            class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                                        />
                                    ) : (
                                        <div class="absolute inset-0 flex flex-col items-center justify-center text-white p-6 text-center">
                                            <h3 class="text-xl font-bold mb-2">{event.name}</h3>
                                            {event.description && (
                                                <p class="text-sm text-gray-200 line-clamp-2">{event.description}</p>
                                            )}
                                        </div>
                                    )}

                                    {/* Featured Badge - Top Left */}
                                    <div class="absolute top-3 left-3">
                                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-purple-500 text-white shadow-lg backdrop-blur-sm bg-opacity-90">
                                            <svg
                                                xmlns="http://www.w3.org/2000/svg"
                                                class="h-4 w-4 mr-1"
                                                viewBox="0 0 24 24"
                                                fill="currentColor"
                                            >
                                                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" />
                                            </svg>
                                            Featured
                                        </span>
                                    </div>

                                    {/* Date Badge - Top Right */}
                                    <div class="absolute top-3 right-3">
                                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-black text-white shadow-lg backdrop-blur-sm bg-opacity-50">
                                            {new Date(event.start_time).toLocaleDateString('en-US', {
                                                month: 'short',
                                                day: 'numeric',
                                            })}
                                        </span>
                                    </div>
                                </div>

                                {/* Event Content */}
                                <div class="p-6">
                                    <div class="flex flex-col gap-3">
                                        {/* Title and Verification */}
                                        <div class="flex items-start justify-between gap-2">
                                            <h3 class="text-xl font-bold text-gray-900 group-hover:text-purple-600 transition-colors line-clamp-2">
                                                {event.name}
                                            </h3>
                                            {event?.account_id && (
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    width="20"
                                                    height="20"
                                                    viewBox="0 0 24 24"
                                                    fill="none"
                                                    stroke="#22c55e"
                                                    stroke-width="2"
                                                    stroke-linecap="round"
                                                    stroke-linejoin="round"
                                                    class="flex-shrink-0"
                                                >
                                                    <path d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z" />
                                                    <path d="m9 12 2 2 4-4" />
                                                </svg>
                                            )}
                                        </div>

                                        {/* Event Type Badge */}
                                        {event.type && (
                                            <div>
                                                <span
                                                    class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                                                        event.type === 'workshop'
                                                            ? 'bg-blue-100 text-blue-800'
                                                            : event.type === 'conference'
                                                              ? 'bg-emerald-100 text-emerald-800'
                                                              : event.type === 'meetup'
                                                                ? 'bg-amber-100 text-amber-800'
                                                                : 'bg-purple-100 text-purple-800'
                                                    }`}
                                                >
                                                    {event.type.charAt(0).toUpperCase() + event.type.slice(1)}
                                                </span>
                                            </div>
                                        )}

                                        {/* Event Details */}
                                        <div class="flex items-center gap-4 text-sm text-gray-600">
                                            {/* Time */}
                                            <div class="flex items-center">
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    class="w-4 h-4 mr-1.5 text-gray-400"
                                                    viewBox="0 0 24 24"
                                                    fill="none"
                                                    stroke="currentColor"
                                                    stroke-width="2"
                                                    stroke-linecap="round"
                                                    stroke-linejoin="round"
                                                >
                                                    <circle cx="12" cy="12" r="10" />
                                                    <polyline points="12 6 12 12 16 14" />
                                                </svg>
                                                {formatTimeRange(event)}
                                            </div>

                                            {/* Location */}
                                            {event.location && (
                                                <div class="flex items-center">
                                                    <svg
                                                        xmlns="http://www.w3.org/2000/svg"
                                                        class="w-4 h-4 mr-1.5 text-gray-400"
                                                        viewBox="0 0 24 24"
                                                        fill="none"
                                                        stroke="currentColor"
                                                        stroke-width="2"
                                                        stroke-linecap="round"
                                                        stroke-linejoin="round"
                                                    >
                                                        <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z" />
                                                        <circle cx="12" cy="10" r="3" />
                                                    </svg>
                                                    <span class="line-clamp-1">{event.location}</span>
                                                </div>
                                            )}
                                        </div>
                                    </div>
                                </div>
                            </a>
                        ))}
                </div>
            </div>
        )
    }

    {/* Regular Events Section */}
    <div class="space-y-12">
        {
            sortedMonths.map((month) => {
                const datesInMonth = eventsByMonthAndDate[month];
                const sortedDates = Object.keys(datesInMonth).sort((a, b) => {
                    const dateA = new Date(a);
                    const dateB = new Date(b);
                    return isRecentEvents ? dateB.getTime() - dateA.getTime() : dateA.getTime() - dateB.getTime();
                });

                return (
                    <div class="month-section">
                        {/* Month separator */}
                        <div class="month-header relative mb-6">
                            <div class="flex items-center">
                                <h3 class="text-lg font-semibold text-gray-800">{month}</h3>
                                <div class="ml-4 flex-grow h-px bg-gray-200" />
                            </div>
                        </div>

                        <div class="space-y-6">
                            {sortedDates.map((dateStr) => {
                                const { day, weekday, month } = formatDateHeader(dateStr);
                                const dateEvents = datesInMonth[dateStr];
                                const sortedEvents = [...dateEvents].sort((a, b) => {
                                    const timeA = new Date(a.start_time).getTime();
                                    const timeB = new Date(b.start_time).getTime();
                                    return isRecentEvents ? timeB - timeA : timeA - timeB;
                                });
                                const date = new Date(dateStr);
                                const isToday = new Date().toDateString() === date.toDateString();

                                return (
                                    <div class="date-group mb-6">
                                        <div class="flex">
                                            {/* Date column */}
                                            <div class="w-20 flex-shrink-0 pr-4">
                                                <div class="text-center">
                                                    <div class="text-2xl font-bold text-gray-800">{day}</div>
                                                    <div class="text-xs font-medium text-gray-500 uppercase tracking-wider">
                                                        {weekday}
                                                    </div>
                                                    <div class="text-xs text-gray-400 uppercase">{month}</div>
                                                    {isToday && (
                                                        <div class="mt-1 text-xs px-2 py-0.5 bg-purple-100 text-purple-800 rounded-full">
                                                            Today
                                                        </div>
                                                    )}
                                                </div>
                                            </div>

                                            {/* Events column */}
                                            <div class="flex-1">
                                                <div class="bg-white rounded-lg shadow-sm overflow-hidden divide-y divide-gray-100">
                                                    {sortedEvents.map((event) => {
                                                        const eventStatus = getEventStatus(event);
                                                        const isFeatured = event.is_featured;

                                                        return (
                                                            <div
                                                                class={`event-item group relative ${
                                                                    isFeatured
                                                                        ? 'featured-event bg-gradient-to-r from-purple-50 via-white to-purple-50'
                                                                        : ''
                                                                }`}
                                                            >
                                                                {/* Featured indicator */}
                                                                {isFeatured && (
                                                                    <div class="absolute left-0 top-0 bottom-0 w-1 bg-gradient-to-b from-purple-400 to-purple-600" />
                                                                )}

                                                                <div class="flex">
                                                                    {/* Cover photo */}
                                                                    <div class="hidden sm:block w-24 h-auto overflow-hidden flex-shrink-0">
                                                                        {event.cover_photo ? (
                                                                            <img
                                                                                src={event.cover_photo}
                                                                                alt={`${event.name} cover`}
                                                                                class="w-full h-full object-cover"
                                                                                loading="lazy"
                                                                            />
                                                                        ) : (
                                                                            <div
                                                                                class={`w-full h-full flex items-center justify-center ${
                                                                                    isFeatured
                                                                                        ? 'bg-gradient-to-br from-purple-500 to-purple-700'
                                                                                        : getEventGradient(event)
                                                                                }`}
                                                                            >
                                                                                {event.type && (
                                                                                    <div class="text-white text-center p-2">
                                                                                        <div class="text-xs font-semibold uppercase tracking-wider">
                                                                                            {event.type}
                                                                                        </div>
                                                                                    </div>
                                                                                )}
                                                                            </div>
                                                                        )}
                                                                    </div>

                                                                    {/* Event content */}
                                                                    <div class="flex-1 p-4 pr-12">
                                                                        <div>
                                                                            <div class="flex-1 min-w-0">
                                                                                {/* Event title and badges */}
                                                                                <div class="flex flex-wrap items-center gap-1.5 mb-2">
                                                                                    <h3
                                                                                        class={`text-base font-semibold ${
                                                                                            isFeatured
                                                                                                ? 'text-purple-900'
                                                                                                : 'text-gray-900'
                                                                                        } line-clamp-1`}
                                                                                    >
                                                                                        {event.name}
                                                                                    </h3>
                                                                                    {event?.account_id && (
                                                                                        <svg
                                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                                            width="16"
                                                                                            height="16"
                                                                                            viewBox="0 0 24 24"
                                                                                            fill="none"
                                                                                            stroke="#22c55e"
                                                                                            stroke-width="2"
                                                                                            stroke-linecap="round"
                                                                                            stroke-linejoin="round"
                                                                                            class="ml-1 flex-shrink-0 text-green-500"
                                                                                        >
                                                                                            <path d="M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z" />
                                                                                            <path d="m9 12 2 2 4-4" />
                                                                                        </svg>
                                                                                    )}
                                                                                    {isFeatured && (
                                                                                        <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-purple-100/80 text-purple-800 shadow-sm shadow-purple-100">
                                                                                            <svg
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                                class="h-3 w-3 mr-1"
                                                                                                viewBox="0 0 24 24"
                                                                                                fill="currentColor"
                                                                                                stroke="none"
                                                                                            >
                                                                                                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" />
                                                                                            </svg>
                                                                                            Featured
                                                                                        </span>
                                                                                    )}
                                                                                    {event.type && (
                                                                                        <span
                                                                                            class={`inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium ${
                                                                                                isFeatured
                                                                                                    ? 'bg-purple-100/60 text-purple-800'
                                                                                                    : event.type ===
                                                                                                        'workshop'
                                                                                                      ? 'bg-blue-100 text-blue-800'
                                                                                                      : event.type ===
                                                                                                          'conference'
                                                                                                        ? 'bg-emerald-100 text-emerald-800'
                                                                                                        : event.type ===
                                                                                                            'meetup'
                                                                                                          ? 'bg-amber-100 text-amber-800'
                                                                                                          : 'bg-purple-100 text-purple-800'
                                                                                            }`}
                                                                                        >
                                                                                            {event.type
                                                                                                .charAt(0)
                                                                                                .toUpperCase() +
                                                                                                event.type.slice(1)}
                                                                                        </span>
                                                                                    )}
                                                                                </div>

                                                                                {/* Event description - short excerpt */}
                                                                                {event.description && (
                                                                                    <p
                                                                                        class={`text-sm ${
                                                                                            isFeatured
                                                                                                ? 'text-purple-700'
                                                                                                : 'text-gray-600'
                                                                                        } line-clamp-2 mb-2`}
                                                                                    >
                                                                                        {event.description}
                                                                                    </p>
                                                                                )}

                                                                                {/* Event details */}
                                                                                <div class="mt-2 flex flex-wrap items-center gap-4">
                                                                                    {/* Time */}
                                                                                    <div
                                                                                        class={`flex items-center text-sm ${
                                                                                            isFeatured
                                                                                                ? 'text-purple-600'
                                                                                                : 'text-gray-600'
                                                                                        }`}
                                                                                    >
                                                                                        <svg
                                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                                            class={`w-4 h-4 mr-1.5 flex-shrink-0 ${
                                                                                                isFeatured
                                                                                                    ? 'text-purple-400'
                                                                                                    : 'text-gray-400'
                                                                                            }`}
                                                                                            viewBox="0 0 24 24"
                                                                                            fill="none"
                                                                                            stroke="currentColor"
                                                                                            stroke-width="2"
                                                                                            stroke-linecap="round"
                                                                                            stroke-linejoin="round"
                                                                                        >
                                                                                            <circle
                                                                                                cx="12"
                                                                                                cy="12"
                                                                                                r="10"
                                                                                            />
                                                                                            <polyline points="12 6 12 12 16 14" />
                                                                                        </svg>
                                                                                        <time
                                                                                            datetime={event.start_time}
                                                                                        >
                                                                                            {formatTimeRange(event)}
                                                                                        </time>
                                                                                    </div>

                                                                                    {/* Location */}
                                                                                    {event.location && (
                                                                                        <div
                                                                                            class={`flex items-center text-sm ${
                                                                                                isFeatured
                                                                                                    ? 'text-purple-600'
                                                                                                    : 'text-gray-600'
                                                                                            }`}
                                                                                        >
                                                                                            <svg
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                                class={`w-4 h-4 mr-1.5 flex-shrink-0 ${
                                                                                                    isFeatured
                                                                                                        ? 'text-purple-400'
                                                                                                        : 'text-gray-400'
                                                                                                }`}
                                                                                                viewBox="0 0 24 24"
                                                                                                fill="none"
                                                                                                stroke="currentColor"
                                                                                                stroke-width="2"
                                                                                                stroke-linecap="round"
                                                                                                stroke-linejoin="round"
                                                                                            >
                                                                                                <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z" />
                                                                                                <circle
                                                                                                    cx="12"
                                                                                                    cy="10"
                                                                                                    r="3"
                                                                                                />
                                                                                            </svg>
                                                                                            <span class="line-clamp-1">
                                                                                                {event.location}
                                                                                            </span>
                                                                                        </div>
                                                                                    )}
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>

                                                                    {/* Action buttons - floating on the right side */}
                                                                    <div class="absolute right-4 top-1/2 -translate-y-1/2 flex flex-col items-end space-y-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                                                                        <div class="flex space-x-2">
                                                                            {/* View button */}
                                                                            <a
                                                                                href={`/events/${event.slug || event.id}`}
                                                                                class={`inline-flex items-center justify-center w-8 h-8 ${
                                                                                    isFeatured
                                                                                        ? 'text-purple-600 hover:text-purple-700 bg-purple-50 hover:bg-purple-100'
                                                                                        : 'text-gray-500 hover:text-gray-700 bg-gray-50 hover:bg-gray-100'
                                                                                } rounded-full transition-colors`}
                                                                                title="View details"
                                                                            >
                                                                                <svg
                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                    width="16"
                                                                                    height="16"
                                                                                    viewBox="0 0 24 24"
                                                                                    fill="none"
                                                                                    stroke="currentColor"
                                                                                    stroke-width="2"
                                                                                    stroke-linecap="round"
                                                                                    stroke-linejoin="round"
                                                                                >
                                                                                    <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z" />
                                                                                    <circle cx="12" cy="12" r="3" />
                                                                                </svg>
                                                                            </a>

                                                                            {/* Share button */}
                                                                            <button
                                                                                class={`inline-flex items-center justify-center w-8 h-8 ${
                                                                                    isFeatured
                                                                                        ? 'text-purple-600 hover:text-purple-700 bg-purple-50 hover:bg-purple-100'
                                                                                        : 'text-gray-500 hover:text-gray-700 bg-gray-50 hover:bg-gray-100'
                                                                                } rounded-full transition-colors`}
                                                                                onclick="event.preventDefault(); navigator.share({ title: this.dataset.title, text: this.dataset.description, url: window.location.origin + this.dataset.url })"
                                                                                data-title={event.name}
                                                                                data-description={event.description}
                                                                                data-url={`/events/${event.slug || event.id}`}
                                                                                title="Share event"
                                                                            >
                                                                                <svg
                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                    width="16"
                                                                                    height="16"
                                                                                    viewBox="0 0 24 24"
                                                                                    fill="none"
                                                                                    stroke="currentColor"
                                                                                    stroke-width="2"
                                                                                    stroke-linecap="round"
                                                                                    stroke-linejoin="round"
                                                                                >
                                                                                    <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8" />
                                                                                    <polyline points="16 6 12 2 8 6" />
                                                                                    <line
                                                                                        x1="12"
                                                                                        y1="2"
                                                                                        x2="12"
                                                                                        y2="15"
                                                                                    />
                                                                                </svg>
                                                                            </button>
                                                                        </div>

                                                                        {/* RSVP button */}
                                                                        <button
                                                                            class={`inline-flex items-center justify-center gap-1 px-3 py-1 text-xs font-medium ${
                                                                                isFeatured
                                                                                    ? 'text-purple-700 bg-purple-100 hover:bg-purple-200'
                                                                                    : 'text-gray-700 bg-gray-100 hover:bg-gray-200'
                                                                            } rounded-md transition-colors`}
                                                                            onclick="event.preventDefault(); alert('RSVP feature coming soon!');"
                                                                        >
                                                                            <svg
                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                width="12"
                                                                                height="12"
                                                                                viewBox="0 0 24 24"
                                                                                fill="none"
                                                                                stroke="currentColor"
                                                                                stroke-width="2"
                                                                                stroke-linecap="round"
                                                                                stroke-linejoin="round"
                                                                            >
                                                                                <rect
                                                                                    width="20"
                                                                                    height="16"
                                                                                    x="2"
                                                                                    y="4"
                                                                                    rx="2"
                                                                                />
                                                                                <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" />
                                                                            </svg>
                                                                            RSVP
                                                                        </button>
                                                                    </div>
                                                                </div>

                                                                {/* Mobile cover photo - only shown on small screens */}
                                                                <div class="sm:hidden w-full h-24 overflow-hidden">
                                                                    {event.cover_photo ? (
                                                                        <img
                                                                            src={event.cover_photo}
                                                                            alt={`${event.name} cover`}
                                                                            class="w-full h-full object-cover"
                                                                            loading="lazy"
                                                                        />
                                                                    ) : (
                                                                        <div
                                                                            class={`w-full h-full flex items-center justify-center ${
                                                                                isFeatured
                                                                                    ? 'bg-gradient-to-br from-purple-500 to-purple-700'
                                                                                    : getEventGradient(event)
                                                                            }`}
                                                                        >
                                                                            {event.type && (
                                                                                <div class="text-white text-center p-2">
                                                                                    <div class="text-sm font-semibold uppercase tracking-wider">
                                                                                        {event.type}
                                                                                    </div>
                                                                                </div>
                                                                            )}
                                                                        </div>
                                                                    )}
                                                                </div>
                                                            </div>
                                                        );
                                                    })}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                );
                            })}
                        </div>
                    </div>
                );
            })
        }
    </div>
</div>

<style>
    .line-clamp-1 {
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    @keyframes pulse {
        0% {
            transform: scale(0.95);
            opacity: 0.8;
        }
        70% {
            transform: scale(1);
            opacity: 1;
        }
        100% {
            transform: scale(0.95);
            opacity: 0.8;
        }
    }

    .animate-pulse-custom {
        animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    }

    /* Improve hover effect on event items */
    .event-item {
        transition: all 0.2s ease-in-out;
    }

    .event-item:hover {
        background-color: rgba(249, 250, 251, 0.5);
    }

    /* Featured event styles */
    .featured-event {
        position: relative;
    }

    .featured-event::before {
        content: none;
    }
</style>
