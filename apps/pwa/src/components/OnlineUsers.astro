---

---

<div class="flex items-center gap-1.5 text-sm text-gray-500" id="online-users-counter">
    <div class="w-2 h-2 rounded-full bg-green-500"></div>
    <span>0 online</span>
</div>

<script>
    // Simplified approach: Use periodic API call instead of WebSocket
    // This dramatically reduces bundle size by avoiding full Supabase client
    
    let updateInterval;
    const sessionId = Math.random().toString(36).substring(2);
    
    async function updateOnlineCount() {
        try {
            // Use a lightweight endpoint to get online count
            const response = await fetch('/api/online-count', { 
                method: 'GET',
                cache: 'no-cache'
            });
            
            if (response.ok) {
                const data = await response.json();
                const counter = document.querySelector('#online-users-counter span');
                if (counter && typeof data.count === 'number') {
                    counter.textContent = `${data.count} online`;
                }
            }
        } catch (error) {
            // Silently fail - not critical functionality
            console.debug('Online count update failed:', error);
        }
    }
    
    // Function to join/leave presence
    async function updatePresence(action) {
        try {
            await fetch('/api/online-count', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ sessionId, action })
            });
        } catch (error) {
            console.debug('Presence update failed:', error);
        }
    }
    
    // Join presence and start periodic updates
    updatePresence('join');
    updateOnlineCount();
    updateInterval = setInterval(updateOnlineCount, 30000);
    
    // Cleanup on page unload
    window.addEventListener('beforeunload', () => {
        updatePresence('leave');
        if (updateInterval) {
            clearInterval(updateInterval);
        }
    });
    
    // Pause updates when page is hidden to save resources
    document.addEventListener('visibilitychange', () => {
        if (document.hidden) {
            if (updateInterval) {
                clearInterval(updateInterval);
            }
        } else {
            updatePresence('join'); // Rejoin when page becomes visible
            updateOnlineCount();
            updateInterval = setInterval(updateOnlineCount, 30000);
        }
    });
</script>
