---
import Layout from '../layouts/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

// Get all changelog entries sorted by date (newest first)
const changelogEntries = await getCollection('changelog');
const sortedEntries = changelogEntries.sort(
    (a: CollectionEntry<'changelog'>, b: CollectionEntry<'changelog'>) => b.data.date.valueOf() - a.data.date.valueOf(),
);
---

<Layout title="Changelog | Cebby">
    <main class="max-w-4xl mx-auto px-4 py-8 sm:px-6 lg:px-8">
        <h1 class="text-3xl font-bold mb-3 text-gray-900 text-center">Changelog</h1>
        <p class="text-center text-gray-600 mb-24">Keep track of updates and improvements to Cebby</p>

        <div class="space-y-10">
            {
                sortedEntries.map((entry) => (
                    <div class="border-b border-gray-100 pb-10 last:border-0">
                        <div class="flex flex-col md:flex-row md:items-center justify-between mb-4">
                            <h2 class="text-2xl font-semibold text-gray-900">
                                <a href={`/changelog/${entry.slug}`} class="hover:text-purple-600 transition-colors">
                                    {entry.data.title}
                                </a>
                            </h2>
                            <div class="flex items-center flex-wrap gap-3 text-sm text-gray-500 mt-2 md:mt-0">
                                <time datetime={entry.data.date.toISOString()} class="flex items-center">
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        class="h-4 w-4 mr-1.5 text-gray-400"
                                        fill="none"
                                        viewBox="0 0 24 24"
                                        stroke="currentColor"
                                    >
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                                        />
                                    </svg>
                                    {entry.data.date.toLocaleDateString('en-US', {
                                        year: 'numeric',
                                        month: 'long',
                                        day: 'numeric',
                                    })}
                                </time>
                                {entry.data.version && (
                                    <span class="bg-purple-50 text-purple-700 px-2.5 py-1 rounded-full text-xs font-medium">
                                        v{entry.data.version}
                                    </span>
                                )}
                            </div>
                        </div>

                        <p class="text-gray-700 mb-4 leading-relaxed">{entry.data.description}</p>

                        {entry.data.tags && entry.data.tags.length > 0 && (
                            <div class="flex flex-wrap gap-2 mb-4">
                                {entry.data.tags.map((tag) => (
                                    <span class="text-xs bg-gray-100 text-gray-700 px-2.5 py-1 rounded-full font-medium">
                                        {tag}
                                    </span>
                                ))}
                            </div>
                        )}

                        <div class="mt-4">
                            <a
                                href={`/changelog/${entry.slug}`}
                                class="inline-flex items-center text-purple-600 hover:text-purple-800 font-medium transition-colors group"
                            >
                                Read more
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    class="h-4 w-4 ml-2 group-hover:translate-x-1 transition-transform"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke="currentColor"
                                >
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M9 5l7 7-7 7"
                                    />
                                </svg>
                            </a>
                        </div>
                    </div>
                ))
            }
        </div>

        {
            sortedEntries.length === 0 && (
                <div class="text-center py-12 border border-gray-100 rounded-lg bg-gray-50">
                    <h2 class="text-xl font-semibold text-gray-800 mb-2">No changelog entries yet</h2>
                    <p class="text-gray-600">Check back later for updates and improvements to Cebby.</p>
                </div>
            )
        }
    </main>
</Layout>
