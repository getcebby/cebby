---
export const prerender = false;

import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import EventCard from '../components/EventCard.astro';
import { supabase } from '../lib/supabase';
import type { EventFromDB } from '../types/database';
import Header from '../components/Header.astro';
import SEO from '../components/SEO.astro';
import OnlineUsers from '../components/OnlineUsers.astro';
import { getDateInTimezone } from '../utils/date';
import { groupEventsByPeriod } from '../utils/events';

// Current date calculations for Supabase query
const thirtyDaysAgo = getDateInTimezone(new Date());
thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);

// Fetch events from Supabase (last 30 days & upcoming)
const { data: allEvents, error } = (await supabase
    .from('events')
    .select('*')
    .filter('is_hidden', 'not.is', 'true')
    .gte('start_time', thirtyDaysAgo.toISOString())
    .order('start_time', { ascending: false })) as {
    data: EventFromDB[] | null;
    error: any;
};

// Group, dedupe and sort
const events = groupEventsByPeriod(allEvents ?? []);

// Destructure grouped events
const {
    happening: happeningEvents = [],
    today: todayEvents = [],
    tomorrow: tomorrowEvents = [],
    thisWeek: thisWeekEvents = [],
    nextWeek: nextWeekEvents = [],
    thisMonth: thisMonthEvents = [],
    nextMonth: nextMonthEvents = [],
    later: laterEvents = [],
    recent: recentEvents = [],
    past: pastEvents = [],
} = events ?? {};

if (error) {
    console.error('Error fetching events:', error);
}

// Get all upcoming events for meta info and JSON-LD
const allUpcomingEvents = [
    ...(events?.today || []),
    ...(events?.tomorrow || []),
    ...(events?.thisWeek || []),
    ...(events?.thisMonth || []),
    ...(events?.nextMonth || []),
    ...(events?.later || []),
];

// Create JSON-LD for the home page
const homeJsonLd = {
    '@context': 'https://schema.org',
    '@type': 'WebPage',
    name: 'Discover all tech events in Cebu in one place - cebby',
    description: 'Discover the latest tech events, conferences, workshops, and meetups happening in Cebu.',
    publisher: {
        '@type': 'Organization',
        name: 'Cebby',
        logo: {
            '@type': 'ImageObject',
            url: new URL('/icons/icon-512x512.png', Astro.url),
        },
    },
    mainEntity: {
        '@type': 'ItemList',
        itemListElement: allUpcomingEvents?.map((event: EventFromDB, index: number) => ({
            '@type': 'ListItem',
            position: index + 1,
            item: {
                '@type': 'Event',
                name: event.name,
                startDate: event.start_time,
                location: {
                    '@type': 'Place',
                    name: event.location,
                },
                url: new URL(`/events/${event?.slug || event?.id}`, Astro.url),
            },
        })),
    },
};

// Calculate some metrics for meta description
const upcomingCount = allUpcomingEvents.length;
const totalEvents = allEvents?.length || 0;
const metaDescription = `Discover ${upcomingCount} upcoming and ${totalEvents} total tech events in Cebu. Find workshops, conferences, meetups, and more tech-related events.`;
---

<Layout title="Discover all tech events in Cebu in one place - cebby">
    <Fragment slot="head">
        <SEO
            title="Discover all tech events in Cebu in one place - cebby"
            description={metaDescription}
            image="/screenshots/image2.png"
            type="website"
        />

        {/* Add JSON-LD Schema markup */}
        <script is:inline type="application/ld+json" set:html={JSON.stringify(homeJsonLd)} />
    </Fragment>

    <Header />

    <main class="min-h-screen pb-16 sm:pb-0 pt-safe">
        <div class="container max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 px-safe">
            {
                error && (
                    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-6" role="alert">
                        <p class="font-medium">Failed to load events. Please try again later.</p>
                    </div>
                )
            }

            {/* Happening Now Section */}
            {
                happeningEvents.length > 0 && (
                    <div class="mb-12" data-section="happening">
                        <h2 class="text-xl font-semibold text-gray-900 mb-6">Happening Now</h2>
                        {/* Mobile Scroll View */}
                        <div class="sm:hidden scroll-container">
                            <div class="scroll-area">
                                {happeningEvents.map((event: EventFromDB) => (
                                    <div class="scroll-item">
                                        <div data-event={JSON.stringify(event)}>
                                            <EventCard event={event} variant="upcoming" />
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>
                        {/* Desktop Grid View */}
                        <div class="hidden sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                            {happeningEvents.map((event: EventFromDB) => (
                                <div data-event={JSON.stringify(event)}>
                                    <EventCard event={event} variant="upcoming" />
                                </div>
                            ))}
                        </div>
                    </div>
                )
            }

            {/* Upcoming Events Section with Pills */}
            {
                (todayEvents.length > 0 ||
                    tomorrowEvents.length > 0 ||
                    thisWeekEvents.length > 0 ||
                    thisMonthEvents.length > 0 ||
                    nextMonthEvents.length > 0 ||
                    laterEvents.length > 0) && (
                    <div class="mb-12" data-section="upcoming">
                        <div class="flex items-center justify-between gap-2 mb-6">
                            <h2 class="text-xl font-semibold text-gray-900">Upcoming Events</h2>
                            <div>
                                <OnlineUsers />
                            </div>
                        </div>

                        {/* Event Categories Navigation */}
                        <div class="mb-6 px-4 sm:px-0">
                            <div class="relative">
                                <div class="flex overflow-x-auto hide-scrollbar -mx-4 sm:mx-0">
                                    <div class="flex items-center gap-2 pb-4 min-w-full sm:min-w-0">
                                        {/* All Events Tab */}
                                        {(todayEvents.length > 0 ||
                                            tomorrowEvents.length > 0 ||
                                            thisWeekEvents.length > 0 ||
                                            nextWeekEvents.length > 0 ||
                                            thisMonthEvents.length > 0 ||
                                            nextMonthEvents.length > 0 ||
                                            laterEvents.length > 0) && (
                                            <button
                                                class="event-tab group relative shrink-0 px-5 py-2 rounded-full bg-gray-900 hover:bg-gray-800 data-[active=true]:bg-gray-900 focus:outline-none transition-colors"
                                                data-tab="all"
                                                data-active="true"
                                            >
                                                <div class="flex items-center space-x-1.5">
                                                    <span class="text-sm font-medium text-white">All</span>
                                                    <span class="inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-medium bg-gray-800 text-gray-300 rounded-full">
                                                        {todayEvents.length +
                                                            tomorrowEvents.length +
                                                            thisWeekEvents.length +
                                                            nextWeekEvents.length +
                                                            thisMonthEvents.length +
                                                            nextMonthEvents.length +
                                                            laterEvents.length}
                                                    </span>
                                                </div>
                                            </button>
                                        )}

                                        {/* Separator */}
                                        {(todayEvents.length > 0 ||
                                            tomorrowEvents.length > 0 ||
                                            thisWeekEvents.length > 0 ||
                                            nextWeekEvents.length > 0 ||
                                            thisMonthEvents.length > 0 ||
                                            nextMonthEvents.length > 0 ||
                                            laterEvents.length > 0) && <div class="h-6 w-px bg-gray-200 mx-2" />}

                                        {/* Time-based filters group */}
                                        <div class="flex items-center gap-2">
                                            {todayEvents.length > 0 && (
                                                <button
                                                    class="event-tab group relative shrink-0 px-4 py-1.5 rounded-full bg-gray-100/80 hover:bg-gray-100 data-[active=true]:bg-gray-900 focus:outline-none transition-colors"
                                                    data-tab="today"
                                                    data-active="false"
                                                >
                                                    <div class="flex items-center space-x-1.5">
                                                        <span class="text-sm font-medium text-gray-600 group-data-[active=true]:text-white">
                                                            Today
                                                        </span>
                                                        <span class="inline-flex items-center justify-center min-w-[1.5rem] px-1 py-0.5 text-xs font-medium bg-white/50 text-gray-500 group-data-[active=true]:bg-gray-800 group-data-[active=true]:text-gray-300 rounded-full ring-1 ring-inset ring-gray-200/20 group-hover:bg-white group-data-[active=true]:ring-gray-700">
                                                            {todayEvents.length}
                                                        </span>
                                                    </div>
                                                </button>
                                            )}

                                            {tomorrowEvents.length > 0 && (
                                                <button
                                                    class="event-tab group relative shrink-0 px-4 py-1.5 rounded-full bg-gray-100/80 hover:bg-gray-100 data-[active=true]:bg-gray-900 focus:outline-none transition-colors"
                                                    data-tab="tomorrow"
                                                    data-active="false"
                                                >
                                                    <div class="flex items-center space-x-1.5">
                                                        <span class="text-sm font-medium text-gray-600 group-data-[active=true]:text-white">
                                                            Tomorrow
                                                        </span>
                                                        <span class="inline-flex items-center justify-center min-w-[1.5rem] px-1 py-0.5 text-xs font-medium bg-white/50 text-gray-500 group-data-[active=true]:bg-gray-800 group-data-[active=true]:text-gray-300 rounded-full ring-1 ring-inset ring-gray-200/20 group-hover:bg-white group-data-[active=true]:ring-gray-700">
                                                            {tomorrowEvents.length}
                                                        </span>
                                                    </div>
                                                </button>
                                            )}

                                            {thisWeekEvents.length > 0 && (
                                                <button
                                                    class="event-tab group relative shrink-0 px-4 py-1.5 rounded-full bg-gray-100/80 hover:bg-gray-100 data-[active=true]:bg-gray-900 focus:outline-none transition-colors"
                                                    data-tab="thisWeek"
                                                    data-active="false"
                                                >
                                                    <div class="flex items-center space-x-1.5">
                                                        <span class="text-sm font-medium text-gray-600 group-data-[active=true]:text-white">
                                                            This Week
                                                        </span>
                                                        <span class="inline-flex items-center justify-center min-w-[1.5rem] px-1 py-0.5 text-xs font-medium bg-white/50 text-gray-500 group-data-[active=true]:bg-gray-800 group-data-[active=true]:text-gray-300 rounded-full ring-1 ring-inset ring-gray-200/20 group-hover:bg-white group-data-[active=true]:ring-gray-700">
                                                            {thisWeekEvents.length}
                                                        </span>
                                                    </div>
                                                </button>
                                            )}

                                            {nextWeekEvents.length > 0 && (
                                                <button
                                                    class="event-tab group relative shrink-0 px-4 py-1.5 rounded-full bg-gray-100/80 hover:bg-gray-100 data-[active=true]:bg-gray-900 focus:outline-none transition-colors"
                                                    data-tab="nextWeek"
                                                    data-active="false"
                                                >
                                                    <div class="flex items-center space-x-1.5">
                                                        <span class="text-sm font-medium text-gray-600 group-data-[active=true]:text-white">
                                                            Next Week
                                                        </span>
                                                        <span class="inline-flex items-center justify-center min-w-[1.5rem] px-1 py-0.5 text-xs font-medium bg-white/50 text-gray-500 group-data-[active=true]:bg-gray-800 group-data-[active=true]:text-gray-300 rounded-full ring-1 ring-inset ring-gray-200/20 group-hover:bg-white group-data-[active=true]:ring-gray-700">
                                                            {nextWeekEvents.length}
                                                        </span>
                                                    </div>
                                                </button>
                                            )}

                                            {thisMonthEvents.length > 0 && (
                                                <button
                                                    class="event-tab group relative shrink-0 px-4 py-1.5 rounded-full bg-gray-100/80 hover:bg-gray-100 data-[active=true]:bg-gray-900 focus:outline-none transition-colors"
                                                    data-tab="thisMonth"
                                                    data-active="false"
                                                >
                                                    <div class="flex items-center space-x-1.5">
                                                        <span class="text-sm font-medium text-gray-600 group-data-[active=true]:text-white">
                                                            This Month
                                                        </span>
                                                        <span class="inline-flex items-center justify-center min-w-[1.5rem] px-1 py-0.5 text-xs font-medium bg-white/50 text-gray-500 group-data-[active=true]:bg-gray-800 group-data-[active=true]:text-gray-300 rounded-full ring-1 ring-inset ring-gray-200/20 group-hover:bg-white group-data-[active=true]:ring-gray-700">
                                                            {thisMonthEvents.length}
                                                        </span>
                                                    </div>
                                                </button>
                                            )}

                                            {nextMonthEvents.length > 0 && (
                                                <button
                                                    class="event-tab group relative shrink-0 px-4 py-1.5 rounded-full bg-gray-100/80 hover:bg-gray-100 data-[active=true]:bg-gray-900 focus:outline-none transition-colors"
                                                    data-tab="nextMonth"
                                                    data-active="false"
                                                >
                                                    <div class="flex items-center space-x-1.5">
                                                        <span class="text-sm font-medium text-gray-600 group-data-[active=true]:text-white">
                                                            Next Month
                                                        </span>
                                                        <span class="inline-flex items-center justify-center min-w-[1.5rem] px-1 py-0.5 text-xs font-medium bg-white/50 text-gray-500 group-data-[active=true]:bg-gray-800 group-data-[active=true]:text-gray-300 rounded-full ring-1 ring-inset ring-gray-200/20 group-hover:bg-white group-data-[active=true]:ring-gray-700">
                                                            {nextMonthEvents.length}
                                                        </span>
                                                    </div>
                                                </button>
                                            )}

                                            {laterEvents.length > 0 && (
                                                <button
                                                    class="event-tab group relative shrink-0 px-4 py-1.5 rounded-full bg-gray-100/80 hover:bg-gray-100 data-[active=true]:bg-gray-900 focus:outline-none transition-colors"
                                                    data-tab="later"
                                                    data-active="false"
                                                >
                                                    <div class="flex items-center space-x-1.5">
                                                        <span class="text-sm font-medium text-gray-600 group-data-[active=true]:text-white">
                                                            Later
                                                        </span>
                                                        <span class="inline-flex items-center justify-center min-w-[1.5rem] px-1 py-0.5 text-xs font-medium bg-white/50 text-gray-500 group-data-[active=true]:bg-gray-800 group-data-[active=true]:text-gray-300 rounded-full ring-1 ring-inset ring-gray-200/20 group-hover:bg-white group-data-[active=true]:ring-gray-700">
                                                            {laterEvents.length}
                                                        </span>
                                                    </div>
                                                </button>
                                            )}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        {/* Event Sections */}
                        <div class="upcoming-sections">
                            {/* All Events Section */}
                            {(todayEvents.length > 0 ||
                                tomorrowEvents.length > 0 ||
                                thisWeekEvents.length > 0 ||
                                nextWeekEvents.length > 0 ||
                                thisMonthEvents.length > 0 ||
                                nextMonthEvents.length > 0 ||
                                laterEvents.length > 0) && (
                                <div class="upcoming-section" data-section="all" data-active="true">
                                    {/* Mobile Scroll View */}
                                    <div class="sm:hidden scroll-container">
                                        <div class="scroll-area">
                                            {[
                                                ...todayEvents,
                                                ...tomorrowEvents,
                                                ...thisWeekEvents,
                                                ...nextWeekEvents,
                                                ...thisMonthEvents,
                                                ...nextMonthEvents,
                                                ...laterEvents,
                                            ].map((event: EventFromDB) => (
                                                <div class="scroll-item">
                                                    <div data-event={JSON.stringify(event)}>
                                                        <EventCard event={event} variant="upcoming" />
                                                    </div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                    {/* Desktop Grid View */}
                                    <div class="hidden sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                                        {[
                                            ...todayEvents,
                                            ...tomorrowEvents,
                                            ...thisWeekEvents,
                                            ...nextWeekEvents,
                                            ...thisMonthEvents,
                                            ...nextMonthEvents,
                                            ...laterEvents,
                                        ].map((event: EventFromDB) => (
                                            <div data-event={JSON.stringify(event)}>
                                                <EventCard event={event} variant="upcoming" />
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}

                            {todayEvents.length > 0 && (
                                <div class="upcoming-section hidden" data-section="today" data-active="false">
                                    {/* Mobile Scroll View */}
                                    <div class="sm:hidden scroll-container">
                                        <div class="scroll-area">
                                            {todayEvents.map((event: EventFromDB) => (
                                                <div class="scroll-item">
                                                    <div data-event={JSON.stringify(event)}>
                                                        <EventCard event={event} variant="upcoming" />
                                                    </div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                    {/* Desktop Grid View */}
                                    <div class="hidden sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                                        {todayEvents.map((event: EventFromDB) => (
                                            <div data-event={JSON.stringify(event)}>
                                                <EventCard event={event} variant="upcoming" />
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}

                            {tomorrowEvents.length > 0 && (
                                <div class="upcoming-section hidden" data-section="tomorrow" data-active="false">
                                    {/* Mobile Scroll View */}
                                    <div class="sm:hidden scroll-container">
                                        <div class="scroll-area">
                                            {tomorrowEvents.map((event: EventFromDB) => (
                                                <div class="scroll-item">
                                                    <div data-event={JSON.stringify(event)}>
                                                        <EventCard event={event} variant="upcoming" />
                                                    </div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                    {/* Desktop Grid View */}
                                    <div class="hidden sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                                        {tomorrowEvents.map((event: EventFromDB) => (
                                            <div data-event={JSON.stringify(event)}>
                                                <EventCard event={event} variant="upcoming" />
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}

                            {thisWeekEvents.length > 0 && (
                                <div class="upcoming-section hidden" data-section="thisWeek" data-active="false">
                                    {/* Mobile Scroll View */}
                                    <div class="sm:hidden scroll-container">
                                        <div class="scroll-area">
                                            {thisWeekEvents.map((event: EventFromDB) => (
                                                <div class="scroll-item">
                                                    <div data-event={JSON.stringify(event)}>
                                                        <EventCard event={event} variant="upcoming" />
                                                    </div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                    {/* Desktop Grid View */}
                                    <div class="hidden sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                                        {thisWeekEvents.map((event: EventFromDB) => (
                                            <div data-event={JSON.stringify(event)}>
                                                <EventCard event={event} variant="upcoming" />
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}

                            {thisMonthEvents.length > 0 && (
                                <div class="upcoming-section hidden" data-section="thisMonth" data-active="false">
                                    {/* Mobile Scroll View */}
                                    <div class="sm:hidden scroll-container">
                                        <div class="scroll-area">
                                            {thisMonthEvents.map((event: EventFromDB) => (
                                                <div class="scroll-item">
                                                    <div data-event={JSON.stringify(event)}>
                                                        <EventCard event={event} variant="upcoming" />
                                                    </div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                    {/* Desktop Grid View */}
                                    <div class="hidden sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                                        {thisMonthEvents.map((event: EventFromDB) => (
                                            <div data-event={JSON.stringify(event)}>
                                                <EventCard event={event} variant="upcoming" />
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}

                            {nextWeekEvents.length > 0 && (
                                <div class="upcoming-section hidden" data-section="nextWeek" data-active="false">
                                    {/* Mobile Scroll View */}
                                    <div class="sm:hidden scroll-container">
                                        <div class="scroll-area">
                                            {nextWeekEvents.map((event: EventFromDB) => (
                                                <div class="scroll-item">
                                                    <div data-event={JSON.stringify(event)}>
                                                        <EventCard event={event} variant="upcoming" />
                                                    </div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                    {/* Desktop Grid View */}
                                    <div class="hidden sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                                        {nextWeekEvents.map((event: EventFromDB) => (
                                            <div data-event={JSON.stringify(event)}>
                                                <EventCard event={event} variant="upcoming" />
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}

                            {nextMonthEvents.length > 0 && (
                                <div class="upcoming-section hidden" data-section="nextMonth" data-active="false">
                                    {/* Mobile Scroll View */}
                                    <div class="sm:hidden scroll-container">
                                        <div class="scroll-area">
                                            {nextMonthEvents.map((event: EventFromDB) => (
                                                <div class="scroll-item">
                                                    <div data-event={JSON.stringify(event)}>
                                                        <EventCard event={event} variant="upcoming" />
                                                    </div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                    {/* Desktop Grid View */}
                                    <div class="hidden sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                                        {nextMonthEvents.map((event: EventFromDB) => (
                                            <div data-event={JSON.stringify(event)}>
                                                <EventCard event={event} variant="upcoming" />
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}

                            {laterEvents.length > 0 && (
                                <div class="upcoming-section hidden" data-section="later" data-active="false">
                                    {/* Mobile Scroll View */}
                                    <div class="sm:hidden scroll-container">
                                        <div class="scroll-area">
                                            {laterEvents.map((event: EventFromDB) => (
                                                <div class="scroll-item">
                                                    <div data-event={JSON.stringify(event)}>
                                                        <EventCard event={event} variant="upcoming" />
                                                    </div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                    {/* Desktop Grid View */}
                                    <div class="hidden sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                                        {laterEvents.map((event: EventFromDB) => (
                                            <div data-event={JSON.stringify(event)}>
                                                <EventCard event={event} variant="upcoming" />
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}
                        </div>
                    </div>
                )
            }

            {/* Recent Events Section */}
            {
                events?.recent && events?.recent?.length > 0 && (
                    <div class="mb-12">
                        <h2 class="text-xl font-semibold text-gray-900 mb-6">Recent Events</h2>
                        {/* Mobile Scroll View */}
                        <div class="sm:hidden scroll-container">
                            <div class="scroll-area">
                                {recentEvents.map((event: EventFromDB) => (
                                    <div class="scroll-item">
                                        <EventCard event={event} variant="recent" />
                                    </div>
                                ))}
                            </div>
                        </div>
                        {/* Desktop Grid View */}
                        <div class="hidden sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                            {recentEvents.map((event: EventFromDB) => (
                                <EventCard event={event} variant="recent" />
                            ))}
                        </div>
                    </div>
                )
            }

            {/* Past Events Section */}
            {
                events?.past && events?.past?.length > 0 && (
                    <div>
                        <h2 class="text-xl font-semibold text-gray-900 mb-6">Past Events</h2>
                        {/* Mobile Scroll View */}
                        <div class="sm:hidden scroll-container">
                            <div class="scroll-area">
                                {pastEvents.slice(0, 9).map((event: EventFromDB) => (
                                    <div class="scroll-item">
                                        <EventCard event={event} variant="past" />
                                    </div>
                                ))}
                            </div>
                        </div>
                        {/* Desktop Grid View */}
                        <div class="hidden sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
                            {pastEvents.slice(0, 9).map((event: EventFromDB) => (
                                <EventCard event={event} variant="past" />
                            ))}
                        </div>
                    </div>
                )
            }

            {/* Empty state */}
            {
                !events?.happening.length &&
                    !events?.today.length &&
                    !events?.tomorrow.length &&
                    !events?.thisWeek.length &&
                    !events?.thisMonth.length &&
                    !events?.nextMonth.length &&
                    !events?.later.length &&
                    !events?.recent.length &&
                    !events?.past.length && (
                        <div class="text-center py-12">
                            <svg
                                class="mx-auto h-12 w-12 text-gray-400"
                                fill="none"
                                viewBox="0 0 24 24"
                                stroke="currentColor"
                            >
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"
                                />
                            </svg>
                            <h3 class="mt-2 text-sm font-medium text-gray-900">No events found</h3>
                            <p class="mt-1 text-sm text-gray-500">Check back later for upcoming events.</p>
                        </div>
                    )
            }
        </div>
    </main>

    <Navigation />
</Layout>

<style>
    /* Mobile scroll styles */
    @media (max-width: 639px) {
        .scroll-container {
            width: 100%;
            overflow: hidden;
            padding: 0.5rem 0 1.5rem;
            margin: -0.5rem 0 -1.5rem;
        }

        .scroll-area {
            display: flex;
            overflow-x: auto;
            scroll-snap-type: x mandatory;
            scroll-behavior: smooth;
            -webkit-overflow-scrolling: touch;
            padding: 0.5rem 1rem;
            margin: 0 -1rem;
            gap: 1rem;
            overscroll-behavior-x: contain;
        }

        .scroll-area::-webkit-scrollbar {
            display: none;
        }

        .scroll-item {
            flex: 0 0 calc(90% - 1rem);
            scroll-snap-align: center;
            scroll-snap-stop: always;
            user-select: none;
            -webkit-user-select: none;
        }

        /* Add this new style for mobile cards */
        .scroll-item > div {
            width: 100%;
            display: flex;
            flex-direction: column;
        }

        .scroll-item > div > a {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        /* Ensure the time filters group scrolls properly on mobile */
        .flex.items-center.gap-2 {
            flex-wrap: nowrap;
            min-width: min-content;
        }
    }

    /* Hide scrollbar but keep functionality */
    .hide-scrollbar {
        -ms-overflow-style: none;
        scrollbar-width: none;
    }
    .hide-scrollbar::-webkit-scrollbar {
        display: none;
    }

    /* Smooth transitions */
    .event-tab [class*='scale-'] {
        transition-property: transform;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
    }

    /* Ensure the All tab stays visible */
    .event-tab[data-tab='all'] {
        position: sticky;
        left: 0;
        z-index: 10;
    }

    /* Add shadow to indicate more content */
    @media (max-width: 639px) {
        .flex.overflow-x-auto::after {
            content: '';
            position: absolute;
            right: 0;
            top: 0;
            bottom: 0;
            width: 24px;
            background: linear-gradient(to right, transparent, white);
            pointer-events: none;
        }
    }
</style>

<script src="../scripts/events.ts"></script>
